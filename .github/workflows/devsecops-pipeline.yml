name: DevSecOps Pipeline

on:
  push:
    branches: [ "main", "develop" ]
  pull_request:
    branches: [ "main" ]

env:
  IMAGE_NAME: secure-fintech-devsecops
  USERNAME: healerkay

jobs:
  sonarcloud:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  

      - name: Generate random tag number
        id: version_step
        run: |
          echo "VERSION=${RANDOM}" >> $GITHUB_ENV 
          echo "::set-output name=VERSION::${RANDOM}"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov httpx

      - name: Run tests with coverage
        run: |
          pytest --cov=app --cov-report=xml --cov-report=html || true

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Run Bandit Security Scan
        run: |
          pip install bandit
          bandit -r app/ -f json -o bandit-report.json || true

      - name: Upload Bandit Report
        uses: actions/upload-artifact@v4
        with:
          name: bandit-report
          path: bandit-report.json

  build-and-test:
    runs-on: ubuntu-latest
    needs: sonarcloud

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov httpx

      - name: Run tests
        run: |
          pytest --cov=app --cov-report=xml --cov-report=html || true


      - name: Logging into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build Docker image
        run: |
          docker build -t $USERNAME/$IMAGE_NAME:${{ env.VERSION }} .
          docker push $USERNAME/$IMAGE_NAME:${{ env.VERSION }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: '$USERNAME/$IMAGE_NAME:${{ env.VERSION }}'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Test Docker container
        run: |
          docker run -d --name test-container -p 8000:8000 $USERNAME/$IMAGE_NAME:${{ env.VERSION }}
          sleep 10
          curl -f http://localhost:8000/ || exit 1
          docker stop test-container
          docker rm test-container

  deploy:
    runs-on: ubuntu-latest
    needs: [sonarcloud, build-and-test]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Connect AKS cluster
        run: |
          az aks get-credentials --resource-group demo_froup --name demoAKS

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s/
          kubectl rollout status deployment/fintech-app
